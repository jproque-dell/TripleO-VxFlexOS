heat_template_version: queens

description: >
  VxFlexOS MDM Service

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  VxFlexAnsibleWorkflowName:
    type: string
    description: Name of the Mistral workflow to execute
    default: tripleo.dellemc.storage.v1.vxflexos-install
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  VxFlexOSClusterName:
    default: vxflexos
    description: VxFlexOS cluster name
    type: string
    constraints:
      - allowed_pattern: "[a-zA-Z0-9]+"
        description: >
          The VxFlexOS cluster name must be at leaste 1 character and contains only
          letters and numbers.
  VxFlexOSRpmsPath:
    default: '/opt/dellemc/vxflexos/rpms/'
    description: Path to look for VxFlexOS RPMs
    type: string
  VxFlexOSProtectionDomain:
    default: 'domain1'
    description: Protection Domain
    type: string
  VxFlexOSStoragePool:
    default: 'pool1'
    description: Storage Pool
    type: string
  VxFlexOSClusterConfig:
    default: '3_node'
    description: Cluster operation config
    type: string
    constraints:
      - allowed_values: [ 3_node ]
        description: Support for 3 nodes ONLY 
  VxFlexOSMgmtInterface:
    default: em3  
    description: Network interface for Mgmt purpose
    type: string
  VxFlexOSClusterInterface:
    default: vlan170
    description: Network interface for clustering 
    type: string
  VxFlexOSClusterVirtualIP: 
    default: ''
    description: Virtual IP to access the VxFlexOS cluster
    type: string
  VxFlexOSPassword:
    default: 'Vxflex123!'
    description: Password for admin user
    type: string
  VxFlexOSLiaToken:
    default: 'Vxflex123!'
    description: LIA Token
    type: string
  VxFlexOSDisks:
    default: []
    description: List of comma separated values to use as disks for SDS
    type: comma_delimited_list
  VxFlexOSLicense:
    default: ''
    description: Location of the .lic license file to install
    type: string
  VxFlexOSRpmsMethod:
    default: 'local'
    description: Method of getting RPMs to install. Can be either local or external
    type: string
    constraints:
      - allowed_values: [ local, external ]
        description: > 
          local if rpms already present in the overcloud image.
          external if using a remote path where to get RPMs from.

resources:

outputs:
  role_data:
    description: Role data for the VxFlexOS base service.
    value:
      service_name: vxflexos_base
      upgrade_tasks:
      puppet_config:
        config_image: ''
        config_volume: ''
        step_config: ''
      docker_config: {}
      workflow_tasks: 
        step2:
          - name: vxflexos_base_ansible_workflow
            workflow: {get_param: VxFlexAnsibleWorkflowName}
      config_settings:
        vxflexos_common_ansible_vars:
          cluster_name: {get_param: VxFlexOSClusterName}
          cluster_config: {get_param: VxFlexOSClusterConfig}
          rpms_path: {get_param: VxFlexOSRpmsPath}
          protection_domain: {get_param: VxFlexOSProtectionDomain}
          storage_pool: {get_param: VxFlexOSStoragePool}
          mgmt_interface: {get_param: VxFlexOSMgmtInterface}
          cluster_interface: {get_param: VxFlexOSClusterInterface}
          cluster_vip: {get_param: VxFlexOSClusterVirtualIP}
          password: {get_param: VxFlexOSPassword}
          lia_token: {get_param: VxFlexOSLiaToken}
          sds_disks: {get_param: VxFlexOSDisks} 
          license: {get_param: VxFlexOSLicense}
          rpms_method: {get_param: VxFlexOSRpmsMethod}
